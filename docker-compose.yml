version: '3'

services:
  web:
    container_name: credentials_manager_server
    build:
      dockerfile: Dockerfile.web
      context: ./
    command: gunicorn --workers=4 --env DJANGO_SETTINGS_MODULE=conf.settings conf.wsgi:application --bind 0.0.0.0:8000
    env_file:
      - .env.docker
    ports:
      - ${APP_PORT}:8000
    volumes:
      - ./src:/app
    depends_on:
      - db
      - redis
      - amqp
    restart: on-failure

  db:
    container_name: credentials_manager_db
    image: postgres:latest
    environment:
      - POSTGRES_DB=credentials_manager
      - POSTGRES_USER=credentials_manager
      - POSTGRES_PASSWORD=credentials_manager
    ports:
      - 5432:5432
    volumes:
      - '../db/credentials_manager:/var/lib/postgresql/data'
    restart: on-failure

  celery:
    container_name: credentials_manager_celery
    build:
      dockerfile: Dockerfile.celery
      context: ./
    command: python -m celery -A conf.celery worker -l INFO --beat --uid credentials_manager -c 1 -s /tmp/celerybeat-schedule.db
    env_file:
      - .env.docker
    volumes:
      - ./src:/app
    depends_on:
      - db
      - redis
    restart: on-failure

  redis:
    image: "redis:latest"
    container_name: credentials_manager_redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - 6379:6379
    volumes:
      - '../redis/credentials_manager:/data'
    restart: on-failure

  amqp:
    image: rabbitmq:3.10.6-management-alpine
    container_name: credentials_manager_amqp
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBIT_MQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBIT_MQ_PASSWORD}
    env_file:
      - .env.docker
    ports:
      - 15672:15672
      - 5672:5672
    restart: on-failure


  flower:
    image: mher/flower
    container_name: credentials_manager_flower
    env_file:
      - .env.docker
    command: celery --broker=amqp://${RABBIT_MQ_USERNAME}:${RABBIT_MQ_PASSWORD}@amqp:5672/ flower
    ports:
      - 15555:5555
    restart: on-failure
